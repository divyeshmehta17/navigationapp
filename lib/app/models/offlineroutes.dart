///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class OfflineRoutesDataDataResultsInstructionsOverviewPolyline {
  String? points;

  OfflineRoutesDataDataResultsInstructionsOverviewPolyline({
    this.points,
  });
  OfflineRoutesDataDataResultsInstructionsOverviewPolyline.fromJson(
      Map<String, dynamic> json) {
    points = json['points']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['points'] = points;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsStepsStartLocation {
  double? lat;
  double? lng;

  OfflineRoutesDataDataResultsInstructionsLegsStepsStartLocation({
    this.lat,
    this.lng,
  });
  OfflineRoutesDataDataResultsInstructionsLegsStepsStartLocation.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsStepsPolyline {
  String? points;

  OfflineRoutesDataDataResultsInstructionsLegsStepsPolyline({
    this.points,
  });
  OfflineRoutesDataDataResultsInstructionsLegsStepsPolyline.fromJson(
      Map<String, dynamic> json) {
    points = json['points']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['points'] = points;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsStepsEndLocation {
  double? lat;
  double? lng;

  OfflineRoutesDataDataResultsInstructionsLegsStepsEndLocation({
    this.lat,
    this.lng,
  });
  OfflineRoutesDataDataResultsInstructionsLegsStepsEndLocation.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsStepsDuration {
  String? text;
  int? value;

  OfflineRoutesDataDataResultsInstructionsLegsStepsDuration({
    this.text,
    this.value,
  });
  OfflineRoutesDataDataResultsInstructionsLegsStepsDuration.fromJson(
      Map<String, dynamic> json) {
    text = json['text']?.toString();
    value = json['value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['value'] = value;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsStepsDistance {
  String? text;
  int? value;

  OfflineRoutesDataDataResultsInstructionsLegsStepsDistance({
    this.text,
    this.value,
  });
  OfflineRoutesDataDataResultsInstructionsLegsStepsDistance.fromJson(
      Map<String, dynamic> json) {
    text = json['text']?.toString();
    value = json['value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['value'] = value;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsSteps {
  OfflineRoutesDataDataResultsInstructionsLegsStepsDistance? distance;
  OfflineRoutesDataDataResultsInstructionsLegsStepsDuration? duration;
  OfflineRoutesDataDataResultsInstructionsLegsStepsEndLocation? endLocation;
  String? htmlInstructions;
  String? maneuver;
  OfflineRoutesDataDataResultsInstructionsLegsStepsPolyline? polyline;
  OfflineRoutesDataDataResultsInstructionsLegsStepsStartLocation? startLocation;
  String? travelMode;

  OfflineRoutesDataDataResultsInstructionsLegsSteps({
    this.distance,
    this.duration,
    this.endLocation,
    this.htmlInstructions,
    this.maneuver,
    this.polyline,
    this.startLocation,
    this.travelMode,
  });
  OfflineRoutesDataDataResultsInstructionsLegsSteps.fromJson(
      Map<String, dynamic> json) {
    distance = (json['distance'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsStepsDistance.fromJson(
            json['distance'])
        : null;
    duration = (json['duration'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsStepsDuration.fromJson(
            json['duration'])
        : null;
    endLocation = (json['end_location'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsStepsEndLocation.fromJson(
            json['end_location'])
        : null;
    htmlInstructions = json['html_instructions']?.toString();
    maneuver = json['maneuver']?.toString();
    polyline = (json['polyline'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsStepsPolyline.fromJson(
            json['polyline'])
        : null;
    startLocation = (json['start_location'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsStepsStartLocation
            .fromJson(json['start_location'])
        : null;
    travelMode = json['travel_mode']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (distance != null) {
      data['distance'] = distance!.toJson();
    }
    if (duration != null) {
      data['duration'] = duration!.toJson();
    }
    if (endLocation != null) {
      data['end_location'] = endLocation!.toJson();
    }
    data['html_instructions'] = htmlInstructions;
    data['maneuver'] = maneuver;
    if (polyline != null) {
      data['polyline'] = polyline!.toJson();
    }
    if (startLocation != null) {
      data['start_location'] = startLocation!.toJson();
    }
    data['travel_mode'] = travelMode;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsStartLocation {
  double? lat;
  double? lng;

  OfflineRoutesDataDataResultsInstructionsLegsStartLocation({
    this.lat,
    this.lng,
  });
  OfflineRoutesDataDataResultsInstructionsLegsStartLocation.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsEndLocation {
  double? lat;
  double? lng;

  OfflineRoutesDataDataResultsInstructionsLegsEndLocation({
    this.lat,
    this.lng,
  });
  OfflineRoutesDataDataResultsInstructionsLegsEndLocation.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsDuration {
  String? text;
  int? value;

  OfflineRoutesDataDataResultsInstructionsLegsDuration({
    this.text,
    this.value,
  });
  OfflineRoutesDataDataResultsInstructionsLegsDuration.fromJson(
      Map<String, dynamic> json) {
    text = json['text']?.toString();
    value = json['value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['value'] = value;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegsDistance {
  String? text;
  int? value;

  OfflineRoutesDataDataResultsInstructionsLegsDistance({
    this.text,
    this.value,
  });
  OfflineRoutesDataDataResultsInstructionsLegsDistance.fromJson(
      Map<String, dynamic> json) {
    text = json['text']?.toString();
    value = json['value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['text'] = text;
    data['value'] = value;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsLegs {
  OfflineRoutesDataDataResultsInstructionsLegsDistance? distance;
  OfflineRoutesDataDataResultsInstructionsLegsDuration? duration;
  String? endAddress;
  OfflineRoutesDataDataResultsInstructionsLegsEndLocation? endLocation;
  String? startAddress;
  OfflineRoutesDataDataResultsInstructionsLegsStartLocation? startLocation;
  List<OfflineRoutesDataDataResultsInstructionsLegsSteps?>? steps;

  OfflineRoutesDataDataResultsInstructionsLegs({
    this.distance,
    this.duration,
    this.endAddress,
    this.endLocation,
    this.startAddress,
    this.startLocation,
    this.steps,
  });
  OfflineRoutesDataDataResultsInstructionsLegs.fromJson(
      Map<String, dynamic> json) {
    distance = (json['distance'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsDistance.fromJson(
            json['distance'])
        : null;
    duration = (json['duration'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsDuration.fromJson(
            json['duration'])
        : null;
    endAddress = json['end_address']?.toString();
    endLocation = (json['end_location'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsEndLocation.fromJson(
            json['end_location'])
        : null;
    startAddress = json['start_address']?.toString();
    startLocation = (json['start_location'] != null)
        ? OfflineRoutesDataDataResultsInstructionsLegsStartLocation.fromJson(
            json['start_location'])
        : null;
    if (json['steps'] != null) {
      final v = json['steps'];
      final arr0 = <OfflineRoutesDataDataResultsInstructionsLegsSteps>[];
      v.forEach((v) {
        arr0.add(OfflineRoutesDataDataResultsInstructionsLegsSteps.fromJson(v));
      });
      steps = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (distance != null) {
      data['distance'] = distance!.toJson();
    }
    if (duration != null) {
      data['duration'] = duration!.toJson();
    }
    data['end_address'] = endAddress;
    if (endLocation != null) {
      data['end_location'] = endLocation!.toJson();
    }
    data['start_address'] = startAddress;
    if (startLocation != null) {
      data['start_location'] = startLocation!.toJson();
    }
    if (steps != null) {
      final v = steps;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['steps'] = arr0;
    }
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsBoundsSouthwest {
  double? lat;
  double? lng;

  OfflineRoutesDataDataResultsInstructionsBoundsSouthwest({
    this.lat,
    this.lng,
  });
  OfflineRoutesDataDataResultsInstructionsBoundsSouthwest.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsBoundsNortheast {
  double? lat;
  double? lng;

  OfflineRoutesDataDataResultsInstructionsBoundsNortheast({
    this.lat,
    this.lng,
  });
  OfflineRoutesDataDataResultsInstructionsBoundsNortheast.fromJson(
      Map<String, dynamic> json) {
    lat = json['lat']?.toDouble();
    lng = json['lng']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lat'] = lat;
    data['lng'] = lng;
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructionsBounds {
  OfflineRoutesDataDataResultsInstructionsBoundsNortheast? northeast;
  OfflineRoutesDataDataResultsInstructionsBoundsSouthwest? southwest;

  OfflineRoutesDataDataResultsInstructionsBounds({
    this.northeast,
    this.southwest,
  });
  OfflineRoutesDataDataResultsInstructionsBounds.fromJson(
      Map<String, dynamic> json) {
    northeast = (json['northeast'] != null)
        ? OfflineRoutesDataDataResultsInstructionsBoundsNortheast.fromJson(
            json['northeast'])
        : null;
    southwest = (json['southwest'] != null)
        ? OfflineRoutesDataDataResultsInstructionsBoundsSouthwest.fromJson(
            json['southwest'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (northeast != null) {
      data['northeast'] = northeast!.toJson();
    }
    if (southwest != null) {
      data['southwest'] = southwest!.toJson();
    }
    return data;
  }
}

class OfflineRoutesDataDataResultsInstructions {
  OfflineRoutesDataDataResultsInstructionsBounds? bounds;
  String? copyrights;
  List<OfflineRoutesDataDataResultsInstructionsLegs?>? legs;
  OfflineRoutesDataDataResultsInstructionsOverviewPolyline? overviewPolyline;
  String? summary;
  List<int?>? waypointOrder;

  OfflineRoutesDataDataResultsInstructions({
    this.bounds,
    this.copyrights,
    this.legs,
    this.overviewPolyline,
    this.summary,
    this.waypointOrder,
  });
  OfflineRoutesDataDataResultsInstructions.fromJson(Map<String, dynamic> json) {
    bounds = (json['bounds'] != null)
        ? OfflineRoutesDataDataResultsInstructionsBounds.fromJson(
            json['bounds'])
        : null;
    copyrights = json['copyrights']?.toString();
    if (json['legs'] != null) {
      final v = json['legs'];
      final arr0 = <OfflineRoutesDataDataResultsInstructionsLegs>[];
      v.forEach((v) {
        arr0.add(OfflineRoutesDataDataResultsInstructionsLegs.fromJson(v));
      });
      legs = arr0;
    }
    overviewPolyline = (json['overview_polyline'] != null)
        ? OfflineRoutesDataDataResultsInstructionsOverviewPolyline.fromJson(
            json['overview_polyline'])
        : null;
    summary = json['summary']?.toString();
    if (json['waypoint_order'] != null) {
      final v = json['waypoint_order'];
      final arr0 = <int>[];
      v.forEach((v) {
        arr0.add(v.toInt());
      });
      waypointOrder = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (bounds != null) {
      data['bounds'] = bounds!.toJson();
    }
    data['copyrights'] = copyrights;
    if (legs != null) {
      final v = legs;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['legs'] = arr0;
    }
    if (overviewPolyline != null) {
      data['overview_polyline'] = overviewPolyline!.toJson();
    }
    data['summary'] = summary;
    if (waypointOrder != null) {
      final v = waypointOrder;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['waypoint_order'] = arr0;
    }
    return data;
  }
}

class OfflineRoutesDataDataResults {
  String? Id;
  String? user;
  String? points;
  List<OfflineRoutesDataDataResultsInstructions?>? instructions;
  int? time;
  double? distance;
  String? placeId;
  String? type;
  String? startName;
  String? endName;
  String? createdAt;
  String? updatedAt;
  int? V;

  OfflineRoutesDataDataResults({
    this.Id,
    this.user,
    this.points,
    this.instructions,
    this.time,
    this.distance,
    this.placeId,
    this.type,
    this.startName,
    this.endName,
    this.createdAt,
    this.updatedAt,
    this.V,
  });
  OfflineRoutesDataDataResults.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    user = json['user']?.toString();
    points = json['points']?.toString();
    if (json['instructions'] != null) {
      final v = json['instructions'];
      final arr0 = <OfflineRoutesDataDataResultsInstructions>[];
      v.forEach((v) {
        arr0.add(OfflineRoutesDataDataResultsInstructions.fromJson(v));
      });
      instructions = arr0;
    }
    time = json['time']?.toInt();
    distance = json['distance']?.toDouble();
    placeId = json['placeId']?.toString();
    type = json['type']?.toString();
    startName = json['startName']?.toString();
    endName = json['endName']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    V = json['__v']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['user'] = user;
    data['points'] = points;
    if (instructions != null) {
      final v = instructions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['instructions'] = arr0;
    }
    data['time'] = time;
    data['distance'] = distance;
    data['placeId'] = placeId;
    data['type'] = type;
    data['startName'] = startName;
    data['endName'] = endName;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['__v'] = V;
    return data;
  }
}

class OfflineRoutesDataData {
  int? page;
  int? limit;
  List<OfflineRoutesDataDataResults?>? results;
  int? totalPages;
  int? totalResults;

  OfflineRoutesDataData({
    this.page,
    this.limit,
    this.results,
    this.totalPages,
    this.totalResults,
  });
  OfflineRoutesDataData.fromJson(Map<String, dynamic> json) {
    page = json['page']?.toInt();
    limit = json['limit']?.toInt();
    if (json['results'] != null) {
      final v = json['results'];
      final arr0 = <OfflineRoutesDataDataResults>[];
      v.forEach((v) {
        arr0.add(OfflineRoutesDataDataResults.fromJson(v));
      });
      results = arr0;
    }
    totalPages = json['totalPages']?.toInt();
    totalResults = json['totalResults']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['page'] = page;
    data['limit'] = limit;
    if (results != null) {
      final v = results;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['results'] = arr0;
    }
    data['totalPages'] = totalPages;
    data['totalResults'] = totalResults;
    return data;
  }
}

class OfflineRoutesData {
  OfflineRoutesDataData? data;

  OfflineRoutesData({
    this.data,
  });
  OfflineRoutesData.fromJson(Map<String, dynamic> json) {
    data = (json['data'] != null)
        ? OfflineRoutesDataData.fromJson(json['data'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
